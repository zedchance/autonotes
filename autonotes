#!/usr/bin/env python3
"""autonotes – cli to automatically create LaTeX notes

PYTHON_ARGCOMPLETE_OK
"""

import os
from datetime import datetime
from milc import cli
import milc.subcommand.config
import milc.questions


def emph(string):
    """ ANSI emphasis """
    emph = '{fg_blue}{style_bright}'
    end = '{style_reset_all}'
    return f'{emph}{string}{end}'


def base_preamble(dir_name):
    """ Create a base preamble.tex file """
    preamble_path = f'{dir_name}/preamble.tex'
    cli.log.info(f'Creating bare {emph(preamble_path)}')
    preamble_file = open(preamble_path, 'w')
    preamble_str = f'% {dir_name} preamble\n' \
                   '\\usepackage{imakeidx}\n' \
                   '\\makeindex[columns=3, title=Date Index, intoc]\n' \
                   '\n% Author name\n' \
                   '\\author{}\n'
    preamble_file.write(preamble_str)
    preamble_file.close()


@cli.entrypoint('autonotes – automatically create LaTeX notes')
def main(cli):
    cli.log.info("No subcommand specified")
    cli.print_usage()


@cli.argument('-n', '--name', help='Name of directory to initialize')
@cli.argument('-p', '--preamble', help='Path to preamble file', default=None)
@cli.subcommand('Initialize a new autonotes directory')
def init(cli):
    """ Creates a new autonotes directory """
    # Make dir
    dir_name = cli.config.init.name
    if dir_name == None:
        dir_name = milc.questions.question("Enter directory name: ")
    if os.path.isdir(dir_name):
        cli.log.error(f'Directory {emph(dir_name)} already exists')
        exit(2)
    cli.log.info(f'Creating {emph(dir_name)} directory')
    os.mkdir(dir_name)

    # Preamble
    preamble_path = cli.config.init.preamble
    if preamble_path is None:
        base_preamble(dir_name)
    elif os.path.isdir(preamble_path):
        cli.log.error(f'{emph(preamble_path)} is a directory, can\'t copy')
        base_preamble(dir_name)
    elif not os.path.exists(preamble_path):
        cli.log.error(f'{emph(preamble_path)} doesn\'t exist, can\'t copy')
        base_preamble(dir_name)
    else:
        if not '.tex' in preamble_path:
            cli.log.warning(f'{emph(preamble_path)} isn\'t a .tex file, copying anyway')
        cli.log.info(f'Copying {emph(preamble_path)}')
        input_preamble = open(preamble_path, 'r')
        input_preamble_lines = input_preamble.readlines()
        input_preamble.close()
        output_preamble = open(f'{dir_name}/preamble.tex', 'w')
        output_preamble.writelines(input_preamble_lines)
        output_preamble.close()

    # Create master.tex file
    master_path = f'{dir_name}/master.tex'
    cli.log.info(f'Creating {emph(master_path)}')
    master = open(master_path, 'w')
    master_str = f'% {dir_name} master file\n' \
                 '\n' \
                 '\\documentclass{article}\n' \
                 '\\input{preamble.tex}\n' \
                 '\n' \
                 '\\title{' \
                 f'{dir_name}' \
                 '}\n' \
                 '\\date{}\n' \
                 '\n' \
                 '\\begin{document}\n' \
                 '\\maketitle\n' \
                 '\\tableofcontents\n' \
                 '\\newpage\n' \
                 '\n%BEGIN NOTES\n%END NOTES\n\n' \
                 '\\printindex\n\n' \
                 '\\end{document}\n'
    master.write(master_str)
    master.close()


@cli.argument('-f', '--filename', help='Filename of note', default='entry')
@cli.argument('-t', '--title', help='Title of note', default='')
@cli.argument('--no-date', help='No date in filename', action='store_true', default=False)
@cli.subcommand('Create a new entry')
def new(cli):
    """ Creates a new entry note """
    # Check to see if a master.tex file exists
    if not os.path.isfile('master.tex'):
        cli.log.error(f'I can\'t find a {emph("master.tex")} file, '
                      'are you inside an autonotes directory?')
        exit(3)

    # Filename
    filename = cli.config.new.filename
    # TODO figure out the datetime_fmt stuff, and get the config to work
    # cli.config.general.datetime_fmt
    file_date = datetime.now().strftime("%Y%m%d")
    today = datetime.now().strftime("%b %m")
    if not cli.config.no_date:
        filename += f'-{file_date}'
    filename += '.tex'
    if os.path.exists(filename):
        cli.log.error(f'File {emph(filename)} already exists.')
        exit(1)

    # Note title
    title = cli.config.new.title
    if title == '':
        title = f'{filename} title'

    # Open file for writing
    file = open(filename, 'w')
    cli.log.info(f'Created {emph(filename)}')
    new_note_str = '\\section{' \
                   f'{title}' \
                   '}\n' \
                   '\\marginpar{' \
                   f'{today}' \
                   '\\index{' \
                   f'{today}' \
                   '}}\n'
    file.write(new_note_str)
    file.close()

    # Open master file
    cli.log.info(f'Inserting entry into {emph("master.tex")}')
    master = open('master.tex', 'r')
    lines = master.readlines()
    master.close()
    try:
        end = lines.index("%END NOTES\n")
    except:
        cli.log.error(f'Incorrect {emph("master.tex")} file, aborting')
        exit(1)
    lines.insert(end, '\\input{'
                      f'{filename}'
                      '}\n')
    master = open('master.tex', 'w')
    master.writelines(lines)
    master.close()


if __name__ == '__main__':
    cli()
